version: '3.8'


services:
  # The Postgres server to store temBoard data.
  repository:
    image: postgres:14-alpine
    ports: [5432:5432]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: [postgres, -c, log_statement=all]

  # A mock SMTP server for alterting by mail.
  smtp:
    image: python:3
    ports: [8025:8025]
    command: [python3, -m, smtpd, --debug, --nosetuid, --class, DebuggingServer]

  # First instance.
  postgres0:
    image: &postgres_image postgres:14-alpine
    # Exposed port is important for docker/dev-switchover.sh
    ports: [15432:5432]
    environment: &postgres_env
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PEER_HOST: postgres1
    volumes:
    - data0:/var/lib/postgresql/data
    - run0:/var/run/postgresql
    - wal:/var/lib/postgresql/archive/
    - ./docker/postgres-ha-entrypoint.sh:/usr/local/bin/postgres-ha-entrypoint.sh
    - ./docker/postgres-setup-replication.sh:/docker-entrypoint-initdb.d/setup-replication.sh
    - ./share/sql/pg_stat_statements-create-extension.sql:/docker-entrypoint-initdb.d/pg_stat_statements-create-extension.sql
    entrypoint: &postgres_entrypoint [/usr/local/bin/postgres-ha-entrypoint.sh]
    command: &postgres_command [
      postgres,
      -c, shared_preload_libraries=pg_stat_statements,
      -c, log_statement=all,
      -c, "log_line_prefix=%m [%p]: [%l-1] app=%a,db=%d,client=%h,user=%u ",
    ]

  agent0:
    image: dalibo/temboard-agent:7
    ports: [2345:2345]
    volumes:
    - data0:/var/lib/postgresql/data
    - run0:/var/run/postgresql
    - /var/run/docker.sock:/var/run/docker.sock
    - .:/usr/local/src/temboard/
    - ./agent/:/usr/local/src/temboard-agent/
    links:
    - postgres0:postgres0.dev
    environment: &agent_env
      # Perists bash history. Eases reuse of pip install and hupper command when
      # recreating container.
      HISTFILE: /usr/local/src/temboard/docker/dev-agent-bash_history
      TEMBOARD_HOSTNAME: postgres0.dev
      TEMBOARD_LOGGING_LEVEL: DEBUG
      TEMBOARD_KEY: key_for_agent
      TEMBOARD_SSL_CA: /usr/local/src/temboard-agent/share/temboard-agent_ca_certs_CHANGEME.pem
      TEMBOARD_SSL_CERT: /usr/local/src/temboard-agent/share/temboard-agent_CHANGEME.pem
      TEMBOARD_SSL_KEY: /usr/local/src/temboard-agent/share/temboard-agent_CHANGEME.key
    command: &agent_command [/usr/bin/tini, sleep, infinity]

  # Second instance, with replication of first instance.
  postgres1:
    image: *postgres_image
    environment:
      <<: *postgres_env
      PEER_HOST: postgres0
    # Exposed port is important for docker/dev-switchover.sh
    ports: [25432:5432]
    volumes:
    - data1:/var/lib/postgresql/data
    - run1:/var/run/postgresql
    - wal:/var/lib/postgresql/archive/
    - ./docker/postgres-ha-entrypoint.sh:/usr/local/bin/postgres-ha-entrypoint.sh
    - ./docker/postgres-setup-replication.sh:/docker-entrypoint-initdb.d/setup-replication.sh
    - ./share/sql/pg_stat_statements-create-extension.sql:/docker-entrypoint-initdb.d/pg_stat_statements-create-extension.sql
    entrypoint: *postgres_entrypoint
    command: *postgres_command

  agent1:
    image: dalibo/temboard-agent:7
    ports: [2346:2345]
    volumes:
    - data1:/var/lib/postgresql/data
    - run1:/var/run/postgresql
    - /var/run/docker.sock:/var/run/docker.sock
    - .:/usr/local/src/temboard/
    - ./agent/:/usr/local/src/temboard-agent/
    links:
    - postgres1:postgres1.dev
    environment:
      <<: *agent_env
      TEMBOARD_HOSTNAME: postgres1.dev
    command: *agent_command


volumes:
  # Shared archive volume between replicated instances.
  wal:

  # data_directory for first postgres instance.
  data0:
  # /run/postgresql to share socket between postgres instance and agent.
  run0:

  # data directory for second postgres instances.
  data1:
  # /run/postgresql to share socket between postgres instance and agent.
  run1:
