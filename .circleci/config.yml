version: 2.1

workflows:
  version: 2
  default:
    jobs:
    - doc: {name: stage0-doc}
    - lint: {name: stage0-lint}
    - unit:
       name: stage0-unit-py2.7
       pyversion: "2.7"
    - unit:
       name: stage0-unit-py3.5
       pyversion: "3.5"
    - dist: {name: stage0-dist}
    - rpm:
        name: stage0-pkg-centos7
        codename: centos7
        requires: [stage0-dist]
    - rpm:
        name: stage0-pkg-rockylinux8
        codename: rockylinux8
        requires: [stage0-dist]
    - deb:
        name: stage0-pkg-<< matrix.codename >>
        matrix:
          parameters:
            codename: [bullseye, buster, stretch]
        requires: [stage0-dist]
    - func:
        name: stage1-func-pg12-centos7
        requires: [stage0-unit-py2.7, stage0-pkg-centos7]
        dist: centos7
        pgversion: "12"
    - func:
        name: stage1-func-pg14-rockylinux8
        requires: [stage0-unit-py3.5, stage0-pkg-rockylinux8]
        dist: rockylinux8
        pgversion: "14"
        pythonbin: "python3"
    - func:
        name: stage1-func-pg13-bullseye
        requires: [stage0-unit-py2.7, stage0-pkg-bullseye]
        dist: bullseye
        pythonbin: "python3.9"
        pgversion: "13"
    - func:
        name: stage1-func-pg9.6-buster
        requires: [stage0-unit-py2.7, stage0-pkg-buster]
        dist: buster
        pythonbin: "python2.7"
        pgversion: "9.5"
    - func:
        name: stage1-func-pg9.5-stretch
        requires: [stage0-unit-py3.5, stage0-pkg-stretch]
        dist: stretch
        pythonbin: "python3.5"
        pgversion: "9.5"

jobs:
  dist:
    docker: [{image: python:3.6}]
    working_directory: &working_directory /workspace
    steps:
    - checkout
    - run: git submodule update --init
    - run: python setup.py sdist bdist_wheel --universal
    - store_artifacts:
        path: /workspace/dist/
    - persist_to_workspace:
        root: .
        paths:
        - dist/*.tar.gz
        - dist/*.whl

  doc:
    docker: [{image: "python:3.5"}]
    working_directory: *working_directory
    steps:
    - checkout
    - run: git submodule update --init
    - run:
        name: Build documentation with mkdocs
        command: |
          pip install --upgrade --requirement docs/requirements.txt
          mkdocs build --strict
    - store_artifacts:
        path: README.html
        destination: build/README.html

  lint:
    docker: [image: python:3.9]
    working_directory: *working_directory
    steps:
      - checkout
      - run: git submodule update --init
      - &pip-cache-restore
        restore_cache:
          keys:
            - temboard-{{ .Branch }}
            - temboard-master
      - run:
          name: Setup python environment
          command: |
            pip install --upgrade --requirement requirements-dev.txt --editable ./
      - run:
          name: Lint
          command: |
            set -x
            # See https://discuss.circleci.com/t/commit-range-environment-variable/10410
            git diff --check $(git merge-base origin/master $CIRCLE_SHA1)..$CIRCLE_SHA1
            flake8
            python setup.py --long-description | rst2html.py --verbose --halt=warning - >/dev/null
            check-manifest
      - &pip-cache-save
        save_cache:
          key: temboard-{{ .Branch }}
          paths: ["~/.cache/pip/"]

  unit:
    parameters:
      pyversion:
        description: "Python version"
        type: enum
        enum: ["2.7", "3.5"]
    docker:
      - image: python:<< parameters.pyversion >>
    working_directory: *working_directory
    steps:
      - checkout
      - run: git submodule update --init
      - &pip-cache-restore
        restore_cache:
          keys:
            - temboard-{{ .Branch }}
            - temboard-master
      - run:
          name: Setup python environment
          command: |
            pip install --upgrade --requirement requirements-dev.txt --editable .
      - run:
          name: Lint
          command: |
            flake8
      - run:
          name: Python tests
          command: |
            pytest --full-trace --cov-report=xml tests/unit/
      - &pip-cache-save
        save_cache:
          key: temboard-{{ .Branch }}
          paths: ["~/.cache/pip/"]

  rpm:
    parameters:
      codename:
        description: "RHEL-clone distribution"
        type: enum
        enum: [centos7, rockylinux8]
    docker:
      - image: dalibo/buildpack-pkg:<< parameters.codename >>
    working_directory: *working_directory
    steps:
    - checkout
    - run: git submodule update --init
    - attach_workspace:
        at: *working_directory
    - run:
        name: Build RPM snapshot
        command: |
          yum-builddep -y packaging/rpm/temboard.spec
          packaging/rpm/build.sh
    - store_artifacts:
        path: /workspace/dist/
    - persist_to_workspace:
        root: .
        paths:
        - dist/*.rpm

  deb:
    parameters:
      codename:
        description: "Debian version"
        type: enum
        enum: [bullseye, buster, stretch]
    docker: [{image: "dalibo/buildpack-pkg:<< parameters.codename >>"}]
    working_directory: *working_directory
    steps:
    - checkout
    - run: git submodule update --init
    - attach_workspace:
        at: *working_directory
    - run:
        command: ./packaging/deb/mkdeb.sh
        environment:
          DEBFULLNAME: CircleCI
          DEBEMAIL: none@example.com
    - store_artifacts:
        path: /workspace/dist/
    - persist_to_workspace:
        root: .
        paths: [dist/*.deb]

  func:
    parameters:
      dist:
        description: "Distribution"
        type: enum
        enum: [bullseye, buster, stretch, centos7, rockylinux8]
      pgversion:
        description: "PostgreSQL version for repository."
        type: enum
        enum: ["14", "13", "12", "11", "10", "9.6", "9.5"]
      pythonbin:
        description: "Python bin executable"
        type: enum
        enum: ["python2.7", "python2", "python3.9", "python3.5", "python3"]
        default: "python2"
    docker:
    - image: dalibo/buildpack-python:<< parameters.dist >>
      environment:
        PGHOST: 0.0.0.0
        PGUSER: temboard
        PGPASSWORD: &PGPASSWORD confidentiel
        TEMBOARD_PASSWORD: *PGPASSWORD
        TBD_INSTALL_RPM: "1"
    - image: postgres:<< parameters.pgversion >>-alpine
      environment:
        POSTGRES_USER: temboard
        POSTGRES_PASSWORD: *PGPASSWORD
    working_directory: *working_directory
    steps:
    - checkout
    - run: git submodule update --init
    - attach_workspace:
        at: *working_directory
    - *pip-cache-restore
    - run:
        name: Shellcheck
        command: |
          shellcheck share/purge.sh share/create_repository.sh share/auto_configure.sh
          shellcheck packaging/deb/mkdeb.sh
    - run:
        name: Functionnal tests
        command: tests/func/run.sh
        environment:
          PYTHONBIN: << parameters.pythonbin >>
    - *pip-cache-save
    - store_artifacts:
        path: temboard-func.logs
